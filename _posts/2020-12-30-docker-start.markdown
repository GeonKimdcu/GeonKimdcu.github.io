---
layout: post
title: '[Docker] 도커 처음 시작하기'
subtitle: '도커 개요'
categories: devops
tags: doker
comments: true
---

도커가 무엇인지 알아봅니다. 


## 도커란?
![Capture](../assets/img/post/docker/2020-12-31-docker-0.png)
- 도커는 리눅스 컨테이너에 여러 기능을 추가함으로써 애플리케이션을 컨터에너로서 좀 더 쉽게 사용할 수 있게 만들어진 오픈소스입니다. 
- 기존에 사용하던 가상 머신과는 달리 도커 컨테이너는 성능의 손실이 없고 효율적으로 이미지(프로세스 실행 환경)을 구축할 수 있도록 해줍니다.


## 가상머신과 도커 컨테이너
- 가상머신을 실행하는 호스트 머신에 가상화된 하드웨어와 OS를 구축함으로써, 호스트와는 다른 환경을 구축하고 개발과 테스트를 비롯한 다양한 목적으로 사용할 수 있습니다. 
- 각종 시스템 자원을 가상화하고 독립된 공간을 생성하는 작업을 `가상화 작업`이라고 합니다. 
- 이러한 가상화 작업은 `하이퍼바이저`를 사용하여 `Guest OS`를 만듭니다. 
- 어떠한 작업(Ex. 입출력 작업)을 할 때 `하이퍼바이저`를 반드시 거치기 때문에 일반 호스트에 비해 성능이 떨어집니다.
- 추가적으로, 가상 머신은 `Guest OS`를 사용하기 위한 라이브러리, 커널 등을 전부 포함하기 때문에 가상머신을 배포하기 위한 `이미지`로 만들었을 때 이미지의 크기가 커집니다. 

![Capture](../assets/img/post/docker/2020-12-31-docker-1.png)
- 위의 그림을 보시면 알겠지만, 오른쪽의 `Docker Engine`을 사용한 container가 Volume이 더 작은 것을 알 수 있습니다. 
- Docker container는 호스트의 커널을 공유해서 사용할 수 있고, Docker Engine 위에 Application 실행에 필요한 라이브러리 및 바이너리 파일만 존재합니다.
- 이러한 특징 때문에 container를 이미지로 만들었을 때 용량이 가상 머신에 비해 대폭 줄어들게 됩니다. 
- 결론적으로 container를 이미지로 만들어 배포하는 시간이 가상 머신에 비해 빠르며, 가상화된 공간을 사용할 때의 성능 손실이 거의 없다는 장점이 있습니다. 

- 물론 container가 가상 머신에 비해 안좋은 점도 있습니다. 바로 `보안` 문제입니다.
- container가 host의 커널을 공유하기 때문에 container가 보안에 뚫리게 된다면, host 커널도 위험할 수 있습니다. 
- 반면 가상 머신은 host와 커널을 공유하지 않기 때문에 공격을 당해도 다른 가상 머신이나 host가 보호됩니다. 
- 따라서 사용자가 가상 머신을 쓸지, Docker container를 쓸지 판단해야합니다. 
- 보안이 엄청 중요한 프로젝트가 아니라면, 배포가 쉽고 경량화된 Docker container를 사용하는 것이 바람직합니다.    

## 도커를 사용해야 하는 이유


참고자료 
1. https://www.44bits.io/ko/post/easy-deploy-with-docker
2. https://medium.com/@darkrasid/docker%EC%99%80-vm-d95d60e56fdd
3. 용찬호(2020), 시작하세요 도커/쿠버네티스, 
